[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "arris-modem-status"
version = "1.1.0"
description = "High-performance Python client for querying Arris modem status via HNAP."
authors = [
    { name = "Charles Marshall", email = "charles@wozi.com" }
]
license = { text = "MIT" }
readme = "README.md"
requires-python = ">=3.8"
dependencies = [
    "requests>=2.25.1",
    "urllib3>=1.26.0"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: System :: Networking :: Monitoring",
    "Topic :: System :: Hardware",
    "Topic :: Internet"
]
keywords = [
    "arris",
    "modem", 
    "cable",
    "DOCSIS",
    "hnap",
    "networking",
    "monitoring"
]

[project.urls]
Homepage = "https://github.com/csmarshall/arris-modem-status"
Repository = "https://github.com/csmarshall/arris-modem-status"
Documentation = "https://github.com/csmarshall/arris-modem-status#readme"
"Bug Tracker" = "https://github.com/csmarshall/arris-modem-status/issues"

[project.scripts]
arris-modem-status = "arris_modem_status.cli:main"

[project.optional-dependencies]
dev = [
    # Testing and debugging tools
    "pytest>=7.0.0",
    "pytest-asyncio>=0.20.0",
    "coverage>=6.0.0",
    
    # Code quality tools
    "flake8>=5.0.0",
    "black>=22.0.0",
    "isort>=5.10.0",
    "mypy>=0.980",
    
    # Browser automation for debugging/analysis
    "selenium>=4.0.0",
    "selenium-wire>=5.0.0",
    "playwright>=1.40.0",
    "webdriver-manager>=3.8.0",
    
    # HTML parsing and analysis
    "beautifulsoup4>=4.9.0",
    "lxml>=4.9.0",
    
    # Development utilities
    "packaging>=21.0",
    "setuptools>=65.0",
    "blinker==1.5"
]

debug = [
    # Enhanced debugging capabilities
    "playwright>=1.40.0",
    "selenium>=4.0.0",
    "selenium-wire>=5.0.0",
    "beautifulsoup4>=4.9.0"
]

testing = [
    # Core testing dependencies
    "pytest>=7.0.0",
    "pytest-asyncio>=0.20.0",
    "coverage>=6.0.0",
    "pytest-cov>=4.0.0"
]

[tool.setuptools]
packages = ["arris_modem_status"]

[tool.setuptools.package-data]
arris_modem_status = ["py.typed"]

[tool.black]
line-length = 120
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 120
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
asyncio_mode = "auto"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests"
]

[tool.coverage.run]
source = ["arris_modem_status"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod"
]